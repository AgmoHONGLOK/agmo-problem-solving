Future<RemoteConfigResponse> handleRemoteConfigUpdate() async {
    await _rc.activate();
    final currentVersion = Version.parse(await currentVersionName);
    final updateUrl = _rc.getString(RemoteConfigs.urlUpdate.value);
    final needForceUpdate = _Helpers.checkIfNeedForceUpdate(forceUpdateVersion);
    final hasNewUpdate = _Helpers.checkIfHasNewVersion(optionalUpdateVersion);

    if (needForceUpdate) {
      final message = _Helpers.decodeMessage(RemoteConfigs.forceUpdateMessage.value) ??
          S.current.remoteConfigForceUpdateMessage(appEnvironmentType.appName);
      response = RemoteConfigResponse(
        type: RemoteConfigResponseType.needForceUpdate,
        message: message,
      );
    }
    if (hasNewUpdate) {
      final message = _Helpers.decodeMessage(RemoteConfigs.optionalVersionUpdateMessage.value) ??
          S.current.remoteConfigLatestUpdateMessage(appEnvironmentType.appName);
      response = RemoteConfigResponse(
        type: RemoteConfigResponseType.hasNewVersion,
        message: message,
      );
    }
    if (response.type != RemoteConfigResponseType.none) {
      remoteConfigChangeController.add(response);
    }
    return response;
  }
}
